<UserControl
    x:Class="SIGame.StudiaCommandPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:SIGame"
    xmlns:lp="clr-namespace:SIGame.Properties"
    xmlns:lvm="clr-namespace:SIGame.ViewModel;assembly=SIGame.ViewModel"
    mc:Ignorable="d" 
    d:DesignHeight="450"
    d:DesignWidth="800"
    d:DataContext="{d:DesignInstance lvm:GameViewModel}">
    <UserControl.Resources>
        <SolidColorBrush x:Key="FadeColor" Color="#FFD8D5A0" />

        <Style TargetType="{x:Type ButtonBase}">
            <Setter Property="Foreground" Value="{StaticResource MainColor}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="{StaticResource MainColor}" />
            <Setter Property="Focusable" Value="False" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ButtonBase}}">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource MainColor}" />
                </Trigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>

                    <Setter Property="Background" Value="{StaticResource HoverColor}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type ButtonBase}}">
            <Style.Triggers>
                <Trigger Property="Command" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                </Trigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource HoverColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="local:DropDownButton" BasedOn="{StaticResource {x:Type ButtonBase}}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource HoverColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PauseButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="ToolTip" Value="{x:Static lp:Resources.Pause}" />
            <Setter Property="FontSize" Value="23" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsPaused}" Value="True">
                    <Setter Property="Background" Value="{StaticResource ActiveColorBrush}" />
                    <Setter Property="ToolTip" Value="{x:Static lp:Resources.Continue}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ApellateButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Visibility" Value="{Binding Data.ApellationEnabled, Converter={StaticResource BooleanToVisibilityConverter1}}" />

            <Style.Triggers>
                <Trigger Property="Command" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ApellateWrongButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ApellateButton}">
            <Setter Property="Visibility" Value="{Binding Data.ApellationEnabled, Converter={StaticResource BooleanToVisibilityConverter1}}" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding Data.ApellationWrongEnabled}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="GameButtonTemplate" TargetType="{x:Type Button}">
            <Border
                Name="Bd"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                BorderBrush="#77000000"
                CornerRadius="25"
                BorderThickness="1"
                MaxWidth="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource Multiplier}, ConverterParameter=5}">

                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#FFFF7F7F" />
                        <GradientStop Offset="0.5" Color="#FFFF1A1A" />
                        <GradientStop Offset="0.5" Color="#FFEB0000" />
                        <GradientStop Offset="1" Color="#FF690000" />
                    </LinearGradientBrush>
                </Border.Background>

                <Border Name="BdI" BorderThickness="0" CornerRadius="25" Opacity="0">
                    <Border.Background>
                        <RadialGradientBrush RadiusX="1.0" RadiusY="1.0">
                            <GradientStop Offset="0" Color="#EEFFFF00" />
                            <GradientStop Offset="0.5" Color="#99FF0000" />
                            <GradientStop Offset="0.8" Color="#33FF0000" />
                        </RadialGradientBrush>
                    </Border.Background>
                </Border>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetName="BdI"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                    To="#77666666"
                                    Duration="0:0:0.0" />

                                <ColorAnimation
                                    Storyboard.TargetName="BdI"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                    To="#77666666"
                                    Duration="0:0:0.0" />

                                <ColorAnimation
                                    Storyboard.TargetName="BdI"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                    To="#77666666"
                                    Duration="0:0:0.0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetName="BdI"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                    Duration="0:0:0.0" />

                                <ColorAnimation
                                    Storyboard.TargetName="BdI"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                    Duration="0:0:0.0" />

                                <ColorAnimation
                                    Storyboard.TargetName="BdI"
                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                    Duration="0:0:0.0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                    <Setter TargetName="BdI" Property="Opacity" Value="1" />
                </Trigger>

                <EventTrigger RoutedEvent="Control.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BdI" Storyboard.TargetProperty="Opacity" To="0.6" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="Control.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BdI" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="BdI"
                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                To="#AAFFDD00"
                                Duration="0:0:0.2" />

                            <ColorAnimation
                                Storyboard.TargetName="BdI"
                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                BeginTime="0:0:0.4"
                                Duration="0:0:0.2" />

                            <ThicknessAnimation Storyboard.TargetName="BdI" Storyboard.TargetProperty="(Border.Margin)" To="-7" Duration="0:0:0.2" />

                            <ThicknessAnimation
                                Storyboard.TargetName="BdI"
                                Storyboard.TargetProperty="(Border.Margin)"
                                BeginTime="0:0:0.4"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="GameButton" TargetType="{x:Type Button}">
            <Setter Property="Template" Value="{StaticResource GameButtonTemplate}"/>
        </Style>

        <Storyboard x:Key="gameSB">
            <DoubleAnimation Storyboard.TargetName="gameBorder" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.2" />
            <DoubleAnimation Storyboard.TargetName="gameBorder" Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.4" Duration="0:0:0.2" />
            <ThicknessAnimation Storyboard.TargetName="gameBorder" Storyboard.TargetProperty="Margin" To="0" Duration="0:0:0.2" />
            <ThicknessAnimation Storyboard.TargetName="gameBorder" Storyboard.TargetProperty="Margin" BeginTime="0:0:0.4" Duration="0:0:0.2" />
        </Storyboard>
    </UserControl.Resources>
    
    <Grid>        
        <Grid.RowDefinitions>
            <RowDefinition Height="16*" />
            <RowDefinition Height="0*" />
            <RowDefinition Height="14*" />
            <RowDefinition Height="8*" />
            <RowDefinition Height="8*" />
            <RowDefinition Height="8*" />
            <RowDefinition Height="8*" />
        </Grid.RowDefinitions>

        <Button
            Grid.Row="2"
            Grid.ColumnSpan="3"
            Cursor="Hand"
            Margin="0,8"
            x:Name="gameButton"
            Style="{StaticResource GameButton}"
            Visibility="{Binding Data.IsPlayer,Converter={StaticResource BooleanToVisibilityConverter1}}"
            Command="{Binding Data.PlayerDataExtensions.PressGameButton}" />
        
        <Border Grid.Row="2" Grid.ColumnSpan="3" Margin="6" Name="gameBorder" Visibility="Hidden" CornerRadius="20" Opacity="0">
            <Border.Background>
                <RadialGradientBrush RadiusX="1.0" RadiusY="1.0">
                    <GradientStop Offset="0" Color="#EEFFFF00" />
                    <GradientStop Offset="0.5" Color="#AAFFDD00" />
                    <GradientStop Offset="0.8" Color="#33FF0000" />
                </RadialGradientBrush>
            </Border.Background>
        </Border>

        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right">
            <local:DropDownButton
                Style="{StaticResource SIDropDownButton}"
                BorderThickness="0"
                Padding="0"
                Width="70"
                BorderBrush="{StaticResource MainColor}"
                ToolTip="{x:Static lp:Resources.Manage_Hint}"
                Visibility="{Binding Data.ShowmanDataExtensions.Manage, Converter={StaticResource NotNullToVisibilityConverter1}}">
                <local:DropDownButton.Resources>
                    <ControlTemplate x:Key="ItemTemplate" TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border" BorderThickness="1" Padding="30,10">
                            <ContentPresenter x:Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource HoverColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </local:DropDownButton.Resources>
                
                <local:DropDownButton.DropDown>
                    <ContextMenu
                        Style="{StaticResource SIContextMenuStyle}"
                        Placement="Top"
                        FontSize="21">
                        <ContextMenu.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource SIContextMenuItemStyle}">
                                <Setter Property="Height" Value="50" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Template" Value="{StaticResource ItemTemplate}" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                        
                        <MenuItem
                            Header="{x:Static lp:Resources.PreviousRound}"
                            StaysOpenOnClick="True"
                            Command="{Binding Move}"
                            CommandParameter="-2" />

                        <MenuItem
                            Header="{x:Static lp:Resources.NextRound}"
                            StaysOpenOnClick="True"
                            Command="{Binding Move}"
                            CommandParameter="2" />
                    </ContextMenu>
                </local:DropDownButton.DropDown>

                <Image Source="/SIGame;component/Resources/move_round.png" RenderOptions.BitmapScalingMode="Fant" Height="35" />
            </local:DropDownButton>

            <ToggleButton
                Grid.Column="1"
                Cursor="Hand"
                Width="70"
                Style="{StaticResource PauseButton}"
                IsChecked="{Binding IsPaused, Mode=OneWay}"
                Command="{Binding ChangePauseInGame}">
                <Image Source="/SIGame;component/Resources/pause.png" RenderOptions.BitmapScalingMode="Fant" Height="26" />
            </ToggleButton>

            <Button
                Grid.Column="2"
                Cursor="Hand"
                Width="70"
                ToolTip="{x:Static lp:Resources.Forward}"
                Command="{Binding Move}"
                CommandParameter="1"
                FontSize="35">
                <Image Source="/SIGame;component/Resources/next.png" RenderOptions.BitmapScalingMode="Fant" Height="26" />
            </Button>

            <Button
                Grid.Column="2"
                Cursor="Hand"
                Width="70"
                ToolTip="{x:Static lp:Resources.ForceStartGame_Hint}"
                Command="{Binding Data.ForceStart}"
                FontSize="35"
                Foreground="Orange">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <TextBlock
                    Text="▶"
                    TextAlignment="Center"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center" />
            </Button>
        </StackPanel>

        <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button
                Width="70"
                Cursor="Hand"
                Command="{Binding Data.ShowmanDataExtensions.ManageTable}"
                FontSize="20"
                ToolTip="{x:Static lp:Resources.EditTable}"
                Visibility="{Binding Data.ShowmanDataExtensions.ManageTable, Converter={StaticResource NotNullToVisibilityConverter1}}"
                ToolTipService.ShowOnDisabled="True">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type ButtonBase}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TInfo.IsEditable}" Value="True">
                                <Setter Property="Background" Value="{StaticResource ActiveColorBrush}" />
                            </DataTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource HoverColor}" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <Image Source="/SIGame;component/Resources/edit.png" RenderOptions.BitmapScalingMode="Fant" Height="24" />
            </Button>

            <Button
                Width="70"
                Cursor="Hand"
                ToolTip="{x:Static lp:Resources.Apellate_Right_Hint}"
                Command="{Binding Data.PlayerDataExtensions.Apellate}"
                CommandParameter="+"
                Style="{StaticResource ApellateButton}"
                FontSize="20">
                <Image Source="/SIGame;component/Resources/appellation.png" RenderOptions.BitmapScalingMode="Fant" Height="26" />
            </Button>

            <Button
                Width="70"
                Cursor="Hand"
                ToolTip="{x:Static lp:Resources.Apellate_Wrong_Hint}"
                Command="{Binding Data.PlayerDataExtensions.Apellate}"
                Content="🤨"
                CommandParameter="-"
                Style="{StaticResource ApellateWrongButton}"
                FontSize="20" />

            <Button
                Width="70"
                Cursor="Hand"
                Command="{Binding Data.PlayerDataExtensions.Pass}"
                Content="⏩"
                ToolTip="{x:Static lp:Resources.Pass}"
                FontSize="20" />

            <Button
                Width="70"
                Cursor="Hand"
                Command="{Binding Data.ShowmanDataExtensions.ChangeActivePlayer}"
                ToolTip="{x:Static lp:Resources.ChangeActivePlayer_Hint}">
                <Image Source="/SIGame;component/Resources/active_player.png" RenderOptions.BitmapScalingMode="Fant" Height="24" />
            </Button>

            <Button
                Width="70"
                Cursor="Hand"
                Command="{Binding Data.ShowmanDataExtensions.ChangeSums}"
                FontSize="20"
                ToolTip="{x:Static lp:Resources.Sums_Hint}">
                <Image Source="/SIGame;component/Resources/sums.png" RenderOptions.BitmapScalingMode="Fant" Height="24" />
            </Button>
        </StackPanel>        

        <local:DropDownButton
            Style="{StaticResource SIDropDownButton}"
            Padding="0"
            FontSize="24"
            BorderBrush="{StaticResource MainColor}"
            Grid.Row="6"
            Width="70"
            HorizontalAlignment="Right"
            Cursor="Hand"
            ToolTip="{x:Static lp:Resources.Exit}">
            <local:DropDownButton.DropDown>
                <ContextMenu Placement="Bottom" Style="{StaticResource SIContextMenuStyle}">
                    <MenuItem
                        Header="{x:Static lp:Resources.Exit_Button}"
                        BorderThickness="1"
                        BorderBrush="#FF999999"
                        Cursor="Hand"
                        TextBlock.TextAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Padding="40,5"
                        FontSize="21"
                        Command="{Binding EndGame}">
                        <MenuItem.Template>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Border
                                    x:Name="templateRoot"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true">
                                    <ContentPresenter
                                        ContentSource="Header"
                                        Margin="{TemplateBinding Padding}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource HoverColor}" />
                                        
                                        <Setter
                                            Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource MenuItem.Highlight.Border}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </MenuItem.Template>
                    </MenuItem>
                    
                    <ContextMenu.Template>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border
                                x:Name="Border"
                                Background="{StaticResource WindowBackground}"
                                BorderThickness="1"
                                BorderBrush="{StaticResource MainColor}">
                                <StackPanel>
                                    <TextBlock
                                        FontSize="18"
                                        Foreground="{StaticResource MainColor}"
                                        Text="{x:Static lp:Resources.ExitPrompt}"
                                        Margin="20,20,20,0"
                                        HorizontalAlignment="Center" />
                                    
                                    <StackPanel
                                        IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        Margin="10,20,10,20"
                                        HorizontalAlignment="Center" />
                                </StackPanel>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="true">
                                    <Setter TargetName="Border" Property="Margin" Value="0,3,0,3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ContextMenu.Template>
                </ContextMenu>
            </local:DropDownButton.DropDown>
            
            <Image Source="/SIGame;component/Resources/exit.png" RenderOptions.BitmapScalingMode="Fant" Height="28" />
        </local:DropDownButton>
    </Grid>
</UserControl>
