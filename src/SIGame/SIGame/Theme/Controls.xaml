<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:l="clr-namespace:SIGame">

    <FontFamily x:Key="Font">pack://application:,,,/SIGame;component/Fonts/#Jost</FontFamily>
    
    <Color x:Key="Hover">#FF89B2FF</Color>
    <Color x:Key="ActiveColor">#FFCEE0FF</Color>
    <Color x:Key="ProgressBarColor">DarkBlue</Color>

    <SolidColorBrush x:Key="WindowBackground" Color="#FF00053C" />
    <SolidColorBrush x:Key="TransparentSIButtonBackground" Color="Transparent" />
    <SolidColorBrush x:Key="MainColor" Color="White" />
    <SolidColorBrush x:Key="HoverColor" Color="{StaticResource Hover}" />
    <SolidColorBrush x:Key="ActiveColorBrush" Color="{StaticResource ActiveColor}" />
    <SolidColorBrush x:Key="ProgressBarColorBrush" Color="{StaticResource ProgressBarColor}" />

    <DropShadowEffect x:Key="Effect" ShadowDepth="1" BlurRadius="3" Opacity="1" RenderingBias="Performance" />

    <!-- Text -->

    <Style x:Key="ShadowedText" TargetType="{x:Type TextBlock}">
        <Setter Property="Effect" Value="{StaticResource Effect}" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="SIText" BasedOn="{StaticResource ShadowedText}" />

    <!-- Button -->
    
    <Style x:Key="SIButtonBase" TargetType="{x:Type ButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="Foreground" Value="{StaticResource MainColor}" />
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(TextBlock.Foreground)}" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    
    <Style x:Key="SIButtonSimple" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource SIButtonBase}">
        <Setter Property="Background" Value="{StaticResource TransparentSIButtonBackground}" />

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                            To="{StaticResource Hover}"
                            Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SIToolButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource SIButtonSimple}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="SIButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource SIButtonSimple}">
        <Setter Property="BorderBrush" Value="{StaticResource MainColor}" />
        <Setter Property="FontWeight" Value="SemiBold" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            Name="text"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Text="{Binding}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        LineStackingStrategy="BlockLineHeight" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.Click">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                            Duration="0:0:0.05"
                            From="Transparent"
                            To="{StaticResource ActiveColor}"
                            AutoReverse="True"
                            RepeatBehavior="4x" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- MenuItem -->

    <SolidColorBrush x:Key="ToolBarButtonHoverBorder" Color="#80DADADA" />
    <SolidColorBrush x:Key="ToolBarMenuCheckFill" Color="#FF212121" />
    <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FF00053C" />
    <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFB6BDC5" />
    <SolidColorBrush x:Key="ToolBarButtonPressedBorder" Color="#90006CD9" />
    <SolidColorBrush x:Key="ToolBarButtonHover" Color="#210080FF" />
    <SolidColorBrush x:Key="ToolBarDarkFill" Color="#FFEEF5FD" />

    <Geometry x:Key="ToolBarCheckmark">M 0,2.5 L 2.5,5 L 7,0.5</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <ControlTemplate x:Key="CustomMenuItem" TargetType="{x:Type MenuItem}">
        <Grid Background="Transparent" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                <ColumnDefinition Width="14"/>
            </Grid.ColumnDefinitions>

            <Border
                Name="Border"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Grid.ColumnSpan="4"
                Margin="1,0"/>

            <ContentPresenter
                x:Name="Icon"
                Margin="3"
                VerticalAlignment="Center"
                ContentSource="Icon"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

            <Border
                Name="GlyphPanel"
                Margin="0,1"
                Width="20"
                Height="20"
                Visibility="Hidden"
                BorderBrush="{StaticResource ToolBarButtonHoverBorder}"
                Background="{StaticResource ToolBarMenuCheckFill}"
                BorderThickness="1">
                <Path
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    FlowDirection="LeftToRight"
                    Stroke="{TemplateBinding Foreground}"
                    StrokeThickness="1.2"
                    Data="{StaticResource ToolBarCheckmark}"/>
            </Border>

            <ContentPresenter
                Grid.Column="1"
                ContentSource="Header"
                VerticalAlignment="Center"
                Margin="13,10"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

            <Path
                Grid.Column="3"
                DockPanel.Dock="Right"
                VerticalAlignment="Center"
                Margin="4,0,6,0"
                Fill="{TemplateBinding Foreground}"
                Data="{StaticResource RightArrow}"/>

            <Popup
                x:Name="PART_Popup"
                Placement="Right"
                IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                Focusable="false"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                AllowsTransparency="true">
                <Border
                    Name="SubMenuBorder"
                    Background="{StaticResource ToolBarSubMenuBackground}"
                    BorderBrush="{StaticResource ToolBarMenuBorder}"
                    BorderThickness="1"
                    Grid.IsSharedSizeScope="true">
                    <ScrollViewer
                        Name="SubMenuScrollViewer"
                        Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <ItemsPresenter
                                Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                Grid.ColumnSpan="2"
                                KeyboardNavigation.TabNavigation="Cycle"
                                Margin="0,0,0,1"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>

            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}"/>
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
                <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}"/>
                <Setter TargetName="GlyphPanel" Property="Background" Value="{StaticResource ToolBarDarkFill}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ContextMenu -->

    <Style x:Key="SIContextMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Foreground" Value="{StaticResource MainColor}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="SIContextMenuTemplate" TargetType="ContextMenu">
        <Border
            x:Name="Border"
            Background="{StaticResource WindowBackground}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter
                KeyboardNavigation.DirectionalNavigation="Cycle"
                Margin="0"
                HorizontalAlignment="Center" />
        </Border>
    </ControlTemplate>

    <Style x:Key="SIContextMenuStyle" TargetType="ContextMenu">
        <Setter Property="Template" Value="{StaticResource SIContextMenuTemplate}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{StaticResource Font}" />
        <Setter Property="BorderBrush" Value="Gray" />

        <Style.Resources>
            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource SIContextMenuItemStyle}" />
        </Style.Resources>
    </Style>
    
    <!-- DropDownButton -->

    <Style x:Key="SIDropDownButton" TargetType="{x:Type l:DropDownButton}">
        <Setter Property="Foreground" Value="{StaticResource MainColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:DropDownButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverColor}"/>
            </Trigger>

            <DataTrigger Binding="{Binding DropDown.IsOpen, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{StaticResource ActiveColorBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>