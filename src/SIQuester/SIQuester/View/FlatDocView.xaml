<UserControl
    x:Class="SIQuester.FlatDocView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:l="clr-namespace:SIQuester"
    xmlns:lc="clr-namespace:SIQuester.Converters"
    xmlns:ls="clr-namespace:SIQuester.Selectors"
    xmlns:m="clr-namespace:SIQuester.Model;assembly=SIQuester.ViewModel"
    xmlns:vm="clr-namespace:SIQuester.ViewModel;assembly=SIQuester.ViewModel"             
    xmlns:util="clr-namespace:SIQuester.Utilities"
    xmlns:lm="clr-namespace:SIQuester.Model;assembly=SIQuester.ViewModel"
    xmlns:p="clr-namespace:SIPackages;assembly=SIPackages"    
    xmlns:pc="clr-namespace:SIPackages.Core;assembly=SIPackages"
    xmlns:lp="clr-namespace:SIQuester.Properties"
    xmlns:lb="clr-namespace:SIQuester.Behaviors"
    mc:Ignorable="d" 
    d:DesignHeight="300"
    d:DesignWidth="300"
    d:DataContext="{d:DesignInstance vm:QDocument}">
    <UserControl.Resources>
        <lc:QTypeToColorConverter
            x:Key="QTypeToColorConverter"
            CommonBrush="Black"
            AuctionBrush="#FFFF3A00"
            CatBrush="#FFB900FF"
            SponsoredBrush="#FF00B900" />

        <lc:RoundTypeToColorConverter
            x:Key="RoundTypeToColorConverter"
            CommonBrush="Black"
            FinalBrush="Firebrick" />

        <lc:EqualsToVisibilityConverter x:Key="Equals" />
        <lc:EqualityConverter x:Key="Equals2" />

        <Style x:Key="QHeaderStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{Binding Type.Model.Name, Converter={StaticResource QTypeToColorConverter}}" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsUpgraded}" Value="True">
                    <Setter Property="Foreground" Value="{Binding TypeName, Converter={StaticResource QTypeToColorConverter}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RoundHeaderStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{Binding Model.Type, Converter={StaticResource RoundTypeToColorConverter}}" />
        </Style>

        <DataTemplate x:Key="CompactQuestionView">
            <Border
                Name="bd"
                Background="#FFD5DDFF"
                Margin="3"
                Padding="4"
                BorderThickness="0"
                HorizontalAlignment="Center"
                Width="40">
                <TextBlock
                    x:Name="price"
                    Style="{StaticResource QHeaderStyle}"
                    Text="{Binding Model.Price}"
                    TextAlignment="Center"
                    TextTrimming="CharacterEllipsis" />

                <Border.ToolTip>
                    <TextBlock Text="{Binding Model}" TextWrapping="Wrap" MaxWidth="400" />
                </Border.ToolTip>
            </Border>

            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="bd" Property="Background" Value="#FF6985FF" />
                </Trigger>
                
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="bd" Property="Background" Value="#FF2F56FF" />
                </DataTrigger>
                
                <DataTrigger Binding="{Binding Model.Price}" Value="{x:Static p:Question.InvalidPrice}">
                    <Setter TargetName="price" Property="Text" Value="" />
                </DataTrigger>
                
                <DataTrigger Binding="{Binding Source={x:Static m:AppSettings.Default},Path=ShowToolTips}" Value="False">
                    <Setter TargetName="bd" Property="ToolTip" Value="{x:Null}" />
                </DataTrigger>
                
                <DataTrigger Binding="{Binding FlatLayoutMode, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatLayoutMode.Table}">
                    <Setter TargetName="bd" Property="Margin" Value="2,2,1,2" />
                </DataTrigger>

                <DataTrigger Binding="{Binding IsDragged}" Value="True">
                    <Setter TargetName="bd" Property="Opacity" Value="0.2" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <lc:TemplateConverter x:Key="LocalAtomSelector">
            <lc:TemplateConverter.DefaultTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Model.Text}" TextWrapping="WrapWithOverflow" />
                </DataTemplate>
            </lc:TemplateConverter.DefaultTemplate>

            <lc:TemplateConverter.Templates>
                <DataTemplate x:Key="{x:Static pc:AtomTypes.Oral}">
                    <TextBlock Text="{Binding Model.Text}" TextWrapping="WrapWithOverflow" />
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:AtomTypes.Image}">
                    <Image
                        MinWidth="20"
                        MinHeight="20"
                        MaxWidth="100"
                        MaxHeight="100"
                        Stretch="Uniform"
                        Source="{Binding MediaSource.Uri, Converter={StaticResource ImageConverter}}" />
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:AtomTypes.Audio}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4">
                        <ToggleButton Style="{StaticResource playButton}" Name="play" />
                        <Slider Style="{StaticResource playSlider}" Name="progress" />

                        <MediaElement
                            lb:MediaController.Source="{Binding}"
                            LoadedBehavior="Manual"
                            UnloadedBehavior="Manual"
                            ScrubbingEnabled="{Binding RelativeSource={RelativeSource Self}, Path=HasVideo}"
                            lb:MediaController.PlayPauseButton="{Binding ElementName=play}"
                            lb:MediaController.Progress="{Binding ElementName=progress}" />
                    </StackPanel>
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:AtomTypes.Video}">
                    <Grid Margin="4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Rectangle Fill="Lavender" />

                        <MediaElement
                            lb:MediaController.Source="{Binding}"
                            LoadedBehavior="Manual"
                            UnloadedBehavior="Manual"
                            Width="200"
                            Height="100"
                            ScrubbingEnabled="{Binding RelativeSource={RelativeSource Self}, Path=HasVideo}"
                            lb:MediaController.PlayPauseButton="{Binding ElementName=play}"
                            lb:MediaController.Progress="{Binding ElementName=progress}" />

                        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,5,0,0">
                            <ToggleButton Style="{StaticResource playButton}" Name="play" />
                            <Slider Style="{StaticResource playSlider}" Name="progress" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:AtomTypes.Html}">
                    <TextBlock Text="{Binding Model.Text}" TextWrapping="WrapWithOverflow" />
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:AtomTypes.Marker}">
                    <TextBox
                        FontStyle="Italic"
                        FontSize="14"
                        IsReadOnly="True"
                        TextWrapping="Wrap"
                        Height="Auto"
                        MinWidth="50"
                        Text="{x:Static lp:Resources.AnswerHeader}"
                        Style="{StaticResource CommonTextBox}" />
                </DataTemplate>
            </lc:TemplateConverter.Templates>
        </lc:TemplateConverter>

        <lc:TemplateConverter x:Key="FlatContentItemSelector">
            <lc:TemplateConverter.DefaultTemplate>
                <!-- pc:AtomTypes.Text -->
                <DataTemplate DataType="vm:ContentItemViewModel">
                    <TextBlock Text="{Binding Model.Value}" TextWrapping="WrapWithOverflow" Background="Transparent" />
                </DataTemplate>
            </lc:TemplateConverter.DefaultTemplate>

            <lc:TemplateConverter.Templates>
                <DataTemplate x:Key="{x:Static pc:AtomTypes.Image}">
                    <Image
                        MinWidth="20"
                        MinHeight="20"
                        MaxWidth="100"
                        MaxHeight="100"
                        Stretch="Uniform"
                        Source="{Binding MediaSource.Uri, Converter={StaticResource ImageConverter}}" />
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:AtomTypes.Audio}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4">
                        <ToggleButton Style="{StaticResource playButton}" Name="play" />
                        <Slider Style="{StaticResource playSlider}" Name="progress" />

                        <MediaElement
                            lb:MediaController.Source="{Binding}"
                            LoadedBehavior="Manual"
                            UnloadedBehavior="Manual"
                            ScrubbingEnabled="{Binding RelativeSource={RelativeSource Self}, Path=HasVideo}"
                            lb:MediaController.PlayPauseButton="{Binding ElementName=play}"
                            lb:MediaController.Progress="{Binding ElementName=progress}" />
                    </StackPanel>
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:AtomTypes.AudioNew}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4">
                        <ToggleButton Style="{StaticResource playButton}" Name="play" />
                        <Slider Style="{StaticResource playSlider}" Name="progress" />

                        <MediaElement
                            lb:MediaController.Source="{Binding}"
                            LoadedBehavior="Manual"
                            UnloadedBehavior="Manual"
                            ScrubbingEnabled="{Binding RelativeSource={RelativeSource Self}, Path=HasVideo}"
                            lb:MediaController.PlayPauseButton="{Binding ElementName=play}"
                            lb:MediaController.Progress="{Binding ElementName=progress}" />
                    </StackPanel>
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:AtomTypes.Video}">
                    <Grid Margin="4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Rectangle Fill="Lavender" />

                        <MediaElement
                            lb:MediaController.Source="{Binding}"
                            LoadedBehavior="Manual"
                            UnloadedBehavior="Manual"
                            Width="200"
                            Height="100"
                            ScrubbingEnabled="{Binding RelativeSource={RelativeSource Self}, Path=HasVideo}"
                            lb:MediaController.PlayPauseButton="{Binding ElementName=play}"
                            lb:MediaController.Progress="{Binding ElementName=progress}" />

                        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,5,0,0">
                            <ToggleButton Style="{StaticResource playButton}" Name="play" />
                            <Slider Style="{StaticResource playSlider}" Name="progress" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:AtomTypes.Html}">
                    <TextBlock Text="{Binding Model.Value}" TextWrapping="WrapWithOverflow" />
                </DataTemplate>
            </lc:TemplateConverter.Templates>
        </lc:TemplateConverter>

        <lc:TemplateConverter x:Key="FlatParameterSelector">
            <lc:TemplateConverter.DefaultTemplate>
                <!-- pc:StepParameterTypes.Simple -->
                <DataTemplate DataType="vm:StepParameterViewModel">
                    <TextBlock Text="{Binding Model.SimpleValue}" />
                </DataTemplate>
            </lc:TemplateConverter.DefaultTemplate>

            <lc:TemplateConverter.Templates>
                <DataTemplate x:Key="{x:Static pc:StepParameterTypes.Content}" DataType="vm:StepParameterViewModel">
                    <ItemsControl DataContext="{Binding ContentValue}" ItemsSource="{Binding}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="vm:ContentItemViewModel">
                                <DockPanel>
                                    <ContentControl
                                        Content="{Binding}"
                                        ContentTemplate="{Binding Model.Type, Converter={StaticResource FlatContentItemSelector}}" />
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:StepParameterTypes.Group}" DataType="vm:StepParameterViewModel">
                    <!-- Will be implemented in the future -->
                </DataTemplate>

                <DataTemplate x:Key="{x:Static pc:StepParameterTypes.NumberSet}" DataType="vm:StepParameterViewModel">
                    <TextBlock Text="{Binding Model.NumberSetValue}" />
                </DataTemplate>
            </lc:TemplateConverter.Templates>
        </lc:TemplateConverter>

        <DataTemplate x:Key="QuestionView">
            <Border
                Name="bd"
                Background="#FFD5DDFF"
                Margin="0,5,5,5"
                Padding="6"
                BorderThickness="0"
                HorizontalAlignment="Left"
                Width="240">
                <StackPanel>
                    <TextBlock
                        Style="{StaticResource QHeaderStyle}"
                        Text="{Binding Model.Price, Converter={StaticResource PriceConverter}}" />
                    
                    <ItemsControl Name="body" ItemsSource="{Binding Scenario}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ContentControl
                                    Content="{Binding}"
                                    ContentTemplate="{Binding Model.Type, Converter={StaticResource LocalAtomSelector}}"
                                    KeyboardNavigation.IsTabStop="False" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>

                <Border.ToolTip>
                    <TextBlock Text="{Binding Model}" TextWrapping="Wrap" MaxWidth="400" />
                </Border.ToolTip>
            </Border>
            
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="bd" Property="Background" Value="#FF6985FF" />
                </Trigger>
                
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="bd" Property="Background" Value="#FF2F56FF" />
                </DataTrigger>
                
                <DataTrigger Binding="{Binding Source={x:Static m:AppSettings.Default},Path=ShowToolTips}" Value="False">
                    <Setter TargetName="bd" Property="ToolTip" Value="{x:Null}" />
                </DataTrigger>
                
                <DataTrigger Binding="{Binding FlatLayoutMode, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatLayoutMode.Table}">
                    <Setter TargetName="bd" Property="Margin" Value="2,2,1,2" />
                </DataTrigger>

                <DataTrigger Binding="{Binding IsUpgraded}" Value="True">
                    <Setter TargetName="body" Property="ItemsSource" Value="{Binding Parameters}" />
                    
                    <Setter TargetName="body" Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <DockPanel>
                                    <TextBlock
                                        x:Name="name"
                                        Text="{Binding Key, Converter={StaticResource QuestionParameterNamesConverter}}"
                                        DockPanel.Dock="Left"
                                        FontWeight="Bold"
                                        Foreground="Black"
                                        Margin="0,2,10,2"
                                        TextWrapping="Wrap" />

                                    <ContentControl
                                        x:Name="value"
                                        Margin="0,2,0,0"
                                        TextBlock.Foreground="Black"
                                        Content="{Binding Value}"
                                        ContentTemplate="{Binding Value.Model.Type, Converter={StaticResource FlatParameterSelector}}" />
                                </DockPanel>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Key}" Value="{x:Static pc:QuestionParameterNames.Question}">
                                        <Setter TargetName="name" Property="Text" Value="" />
                                        <Setter TargetName="name" Property="Margin" Value="0" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Key}" Value="{x:Static pc:QuestionParameterNames.Answer}">
                                        <Setter TargetName="name" Property="DockPanel.Dock" Value="Top" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Key}" Value="{x:Static pc:QuestionParameterNames.SelectionMode}">
                                        <Setter TargetName="value" Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Model.SimpleValue, Converter={StaticResource SelectionModesConverter}}" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Key}" Value="{x:Static pc:QuestionParameterNames.AnswerType}">
                                        <Setter TargetName="name" Property="Visibility" Value="Collapsed" />
                                        <Setter TargetName="value" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Key}" Value="{x:Static pc:QuestionParameterNames.AnswerOptions}">
                                        <Setter TargetName="name" Property="Visibility" Value="Collapsed" />
                                        <Setter TargetName="value" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="CompactThemeView">
            <Border
                Name="bd"
                Background="#FFD5DDFF"
                Margin="3"
                Padding="4"
                BorderThickness="0"
                HorizontalAlignment="Center"
                Width="360">
                <TextBlock Text="{Binding Model.Name}" TextAlignment="Center" TextTrimming="CharacterEllipsis" />
                
                <Border.ToolTip>
                    <TextBlock Text="{Binding Model.Name}" TextWrapping="Wrap" MaxWidth="400" />
                </Border.ToolTip>
            </Border>

            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="bd" Property="Background" Value="#FF6985FF" />
                </Trigger>

                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="bd" Property="Background" Value="#FF2F56FF" />
                </DataTrigger>

                <DataTrigger Binding="{Binding Source={x:Static m:AppSettings.Default},Path=ShowToolTips}" Value="False">
                    <Setter TargetName="bd" Property="ToolTip" Value="{x:Null}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <ItemsPanelTemplate x:Key="Horizontal">
            <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>

        <ItemsPanelTemplate x:Key="Vertical">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Left" />
        </ItemsPanelTemplate>

        <Style x:Key="ToolButton" TargetType="Button">
            <Setter Property="Padding" Value="4" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="Visibility" Value="Visible" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding FlatLayoutMode, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatLayoutMode.Table}">
                    <Setter Property="Margin" Value="1,0,2,0" />
                </DataTrigger>

                <DataTrigger Binding="{Binding Edit, Source={x:Static m:AppSettings.Default}}" Value="{x:Static m:EditMode.None}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="ThemeView">
            <StackPanel Name="panel" Margin="0,6,6,0" Background="#FFA1C2DE" Width="240">
                <TextBlock
                    Name="name"
                    Text="{Binding Model.Name}"
                    ToolTip="{Binding Model.Name}"
                    FontSize="14"
                    HorizontalAlignment="Center"
                    Margin="6,6,6,0"
                    TextTrimming="CharacterEllipsis" />
                
                <ItemsControl
                    Name="questions"
                    Margin="0,0,0,6"
                    ItemsSource="{Binding Questions}"
                    ItemTemplate="{StaticResource CompactQuestionView}"
                    HorizontalAlignment="Center">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>

                <Button
                    Command="{Binding AddQuestion}"
                    ToolTip="{Binding AddHeader}"
                    Style="{StaticResource ToolButton}">
                    <Path
                        Stretch="Uniform"
                        Fill="Green"
                        Margin="1"
                        Data="{Binding Source={StaticResource app_add},Path=Data}" />
                </Button>
            </StackPanel>
            
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding FlatLayoutMode, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatLayoutMode.Table}">
                    <Setter TargetName="panel" Property="Orientation" Value="Horizontal" />
                    <Setter TargetName="panel" Property="Width" Value="Auto" />
                    <Setter TargetName="panel" Property="Margin" Value="1" />
                    <Setter TargetName="name" Property="Width" Value="260" />
                    <Setter TargetName="name" Property="Margin" Value="6,0" />
                    <Setter TargetName="name" Property="VerticalAlignment" Value="Center" />
                    <Setter TargetName="questions" Property="ItemsControl.ItemsPanel" Value="{StaticResource Horizontal}" />
                    <Setter TargetName="questions" Property="Margin" Value="0" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="ExpandedThemeView">
            <StackPanel Name="panel">
                <Border x:Name="bd" Margin="0,6,0,0">
                    <TextBlock x:Name="name" Text="{Binding Model.Name}" FontSize="16" FontWeight="Bold"/>
                </Border>
                
                <ItemsControl ItemsSource="{Binding Questions}" ItemTemplate="{StaticResource QuestionView}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>
            
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding FlatLayoutMode, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatLayoutMode.Table}">
                    <Setter TargetName="panel" Property="Orientation" Value="Horizontal" />
                    <Setter TargetName="bd" Property="Width" Value="260" />
                    <Setter TargetName="bd" Property="Margin" Value="0,2" />
                    <Setter TargetName="bd" Property="Background" Value="#FFA1C2DE" />
                    <Setter TargetName="name" Property="TextWrapping" Value="Wrap" />
                    <Setter TargetName="name" Property="VerticalAlignment" Value="Center" />
                    <Setter TargetName="name" Property="HorizontalAlignment" Value="Center" />
                    <Setter TargetName="name" Property="TextAlignment" Value="Center" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="RoundView">
            <StackPanel Margin="6" Background="#FFA1C2DE">
                <TextBlock
                    Text="{Binding Model.Name}"
                    ToolTip="{Binding Model.Name}"
                    FontSize="14"
                    HorizontalAlignment="Center"
                    Margin="6,6,6,0"
                    TextTrimming="CharacterEllipsis"
                    Style="{StaticResource RoundHeaderStyle}" />

                <ItemsControl Name="themes" Margin="6,0,0,6" ItemsSource="{Binding Themes}" ItemTemplate="{StaticResource CompactThemeView}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding FlatLayoutMode, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatLayoutMode.Table}">
                    <Setter TargetName="themes" Property="ItemsControl.ItemsPanel" Value="{StaticResource Vertical}" />
                    <Setter TargetName="themes" Property="Margin" Value="1,0,2,2" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="ExpandedRoundView">
            <StackPanel>
                <TextBlock Name="header" Text="{Binding Model.Name}" FontSize="16" FontWeight="Bold" Margin="0,6,0,0" Style="{StaticResource RoundHeaderStyle}" />
                
                <ItemsControl Name="themes" ItemsSource="{Binding Themes}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    
                    <ItemsControl.Style>
                        <Style TargetType="ItemsControl">
                            <Setter Property="ItemTemplate" Value="{StaticResource ThemeView}" />
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding FlatScale, Source={x:Static m:AppSettings.Default}}"
                                    Value="{x:Static lm:FlatScale.Question}">
                                    <Setter Property="ItemTemplate" Value="{StaticResource ExpandedThemeView}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Style>
                </ItemsControl>
            </StackPanel>
            
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding FlatScale, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatScale.Question}">
                    <Setter TargetName="header" Property="FontSize" Value="20" />
                </DataTrigger>

                <DataTrigger Binding="{Binding FlatLayoutMode, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatLayoutMode.Table}">
                    <Setter TargetName="themes" Property="ItemsControl.ItemsPanel" Value="{StaticResource Vertical}" />
                    <Setter TargetName="themes" Property="Margin" Value="0,5,0,0" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        
        <ls:DictionaryTemplateSelector x:Key="CardSelector">
            <ls:DictionaryTemplateSelector.Templates>
                <DataTemplate x:Key="{x:Type vm:PackageViewModel}" />
                <DataTemplate x:Key="{x:Type vm:RoundViewModel}" />
                <DataTemplate x:Key="{x:Type vm:ThemeViewModel}" />

                <DataTemplate x:Key="{x:Type vm:QuestionViewModel}">
                    <StackPanel Margin="10">
                        <TextBlock Text="{x:Static lp:Resources.Question}" FontSize="18" />
                        <TextBlock Text="{x:Static lp:Resources.Price}" Margin="0,5,0,0" />

                        <l:NumericTextBox
                            x:Name="price"
                            Text="{Binding Model.Price, Converter={StaticResource PriceConverter}}"
                            Margin="0,1,0,0"
                            Padding="0,1" />

                        <TextBlock x:Name="typeHeader" Text="{x:Static lp:Resources.Type}" Margin="0,5,0,0" />

                        <ComboBox
                            x:Name="type"
                            Margin="0,1,0,0"
                            IsSynchronizedWithCurrentItem="False"
                            ItemsSource="{Binding Source={StaticResource QuestionTypesNames}}"
                            SelectedItem="{Binding Type.Model.Name, Converter={StaticResource QuestionTypeConverter}, Mode=TwoWay}" />

                        <ItemsControl x:Name="typeParams" ItemsSource="{Binding Type.Params}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Model.Name, Converter={StaticResource QuestionTypeParamConverter}}" Margin="0,5,0,0" />
                                        <ContentControl Content="{Binding}" ContentTemplateSelector="{StaticResource TypeParamSelector}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.Price}" Value="{x:Static p:Question.InvalidPrice}">
                            <Setter TargetName="price" Property="IsEnabled" Value="False" />
                            <Setter TargetName="price" Property="IsEnabled" Value="False" />
                            <Setter TargetName="typeHeader" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="type" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsUpgraded}" Value="True">
                            <Setter
                                TargetName="type"
                                Property="ItemsSource"
                                Value="{Binding Source={StaticResource QuestionTypesNamesNew}}" />
                            
                            <Setter
                                TargetName="type"
                                Property="SelectedItem"
                                Value="{Binding TypeName, Converter={StaticResource QuestionTypeConverterNew}, Mode=TwoWay}" />

                            <!-- TODO: add new menu for upgraded question type params -->
                            <Setter TargetName="typeParams" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsUpgraded}" Value="True" />
                                <Condition Binding="{Binding TypeName}" Value="" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="typeHeader" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="type" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ls:DictionaryTemplateSelector.Templates>
        </ls:DictionaryTemplateSelector>
        
        <ls:DictionaryTemplateSelector x:Key="SimpleCardSelector">
            <ls:DictionaryTemplateSelector.Templates>
                <DataTemplate x:Key="{x:Type vm:PackageViewModel}" />
                <DataTemplate x:Key="{x:Type vm:RoundViewModel}" />
                <DataTemplate x:Key="{x:Type vm:ThemeViewModel}" />
                <DataTemplate x:Key="{x:Type vm:QuestionViewModel}">
                    <StackPanel Margin="8">
                        <TextBlock x:Name="typeHeader" Text="{x:Static lp:Resources.Type}" />
                        
                        <ComboBox
                            x:Name="type"
                            Margin="0,1,0,0"
                            IsSynchronizedWithCurrentItem="False"
                            SelectedItem="{Binding Type.Model.Name, Converter={StaticResource QuestionTypeConverter}, Mode=TwoWay}"
                            ItemsSource="{Binding Source={StaticResource QuestionTypesNames}}" />

                        <ItemsControl
                            x:Name="typeParams"
                            ItemsSource="{Binding Type.Params}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock
                                            Text="{Binding Model.Name, Converter={StaticResource QuestionTypeParamConverter}}"
                                            Margin="0,5,0,0" />
                                        
                                        <ContentControl Content="{Binding}" ContentTemplateSelector="{StaticResource TypeParamSelector}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <StackPanel
                            Orientation="Horizontal"
                            Margin="0,10,0,0"
                            HorizontalAlignment="Center">
                            <Button
                                x:Name="switch"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                Padding="3"
                                Command="{Binding SwitchEmpty}"
                                ToolTip="{x:Static lp:Resources.MakeEmpty}">
                                <Image Source="{StaticResource Contrast}" Width="15" Height="15" Margin="2" />
                            </Button>

                            <Button
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                Padding="3"
                                Margin="2,0,0,0"
                                Command="{Binding Remove}"
                                ToolTip="{x:Static lp:Resources.Delete}">
                                <Image Source="{StaticResource RemoveImage}" Width="15" Height="15" Margin="2" />
                            </Button>
                        </StackPanel>
                    </StackPanel>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.Price}" Value="{x:Static p:Question.InvalidPrice}">
                            <Setter TargetName="typeHeader" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="type" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="typeParams" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="switch" Property="ToolTip" Value="{x:Static lp:Resources.MakeNonEmpty}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsUpgraded}" Value="True">
                            <Setter
                                TargetName="type"
                                Property="ItemsSource"
                                Value="{Binding Source={StaticResource QuestionTypesNamesNew}}" />

                            <Setter
                                TargetName="type"
                                Property="SelectedItem"
                                Value="{Binding TypeName, Converter={StaticResource QuestionTypeConverterNew}, Mode=TwoWay}" />

                            <!-- TODO: add new floating menu for upgraded question type params -->
                            <Setter TargetName="typeParams" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ls:DictionaryTemplateSelector.Templates>
        </ls:DictionaryTemplateSelector>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <ScrollViewer
            Name="scroller"
            VerticalScrollBarVisibility="Auto"
            PreviewMouseLeftButtonDown="Main_MouseLeftButtonDown"
            PreviewMouseLeftButtonUp="DocumentView_PreviewMouseLeftButtonUp"
            DragEnter="Main_DragEnter"
            DragOver="Main_DragOver"
            Drop="Main_Drop">
            <Grid Name="grid">
                <StackPanel DataContext="{Binding Package}" Margin="10">
                    <TextBlock Text="{Binding Model.Name}" FontSize="24" FontWeight="Bold" />

                    <ItemsControl ItemsSource="{Binding Rounds}">
                        <ItemsControl.Style>
                            <Style TargetType="ItemsControl">
                                <Setter Property="ItemTemplate" Value="{StaticResource ExpandedRoundView}" />

                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding FlatLayoutMode, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatLayoutMode.Table}" />
                                            <Condition Binding="{Binding FlatScale, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatScale.Round}" />
                                        </MultiDataTrigger.Conditions>
                                        
                                        <Setter Property="ItemsControl.ItemsPanel">
                                            <Setter.Value>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel />
                                                </ItemsPanelTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiDataTrigger>
                                    
                                    <DataTrigger Binding="{Binding FlatScale, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatScale.Round}">
                                        <Setter Property="ItemTemplate" Value="{StaticResource RoundView}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>
                    </ItemsControl>
                </StackPanel>
                
                <Line Name="line" Y2="24" StrokeThickness="2" Stroke="Black" Margin="105,105,0,0" Visibility="Hidden" />
                <Image Name="dragImage" Opacity="0.5" Visibility="Hidden" HorizontalAlignment="Left" VerticalAlignment="Top" />
            </Grid>
            
            <ScrollViewer.Style>
                <Style TargetType="ScrollViewer">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FlatLayoutMode, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatLayoutMode.Table}">
                            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding FlatScale, Source={x:Static m:AppSettings.Default}}" Value="{x:Static lm:FlatScale.Round}">
                            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ScrollViewer.Style>
        </ScrollViewer>
        
        <Border
            Width="200"
            Grid.Column="1"
            Background="#FFF1F1F1"
            Visibility="{Binding Source={x:Static m:AppSettings.Default},Path=Edit,Converter={StaticResource Equals},ConverterParameter={x:Static m:EditMode.FixedPanel}}">
            <ContentControl Content="{Binding ActiveNode}" ContentTemplateSelector="{StaticResource CardSelector}" />
        </Border>

        <Popup
            Name="popup"
            IsOpen="{Binding Source={x:Static m:AppSettings.Default},Path=Edit,Converter={StaticResource Equals2},ConverterParameter={x:Static m:EditMode.FloatPanel},Mode=OneWay}"
            SnapsToDevicePixels="True"
            TextOptions.TextFormattingMode="Display"
            AllowsTransparency="True"
            Placement="Top"
            VerticalOffset="-2"
            HorizontalOffset="20"
            util:PopupManager.Owner="{Binding Source={x:Static l:App.Current},Path=MainWindow}">
            <Border Background="#FFF1F1F1" BorderBrush="Gray" BorderThickness="1" Opacity="0.8">
                <Border.Triggers>
                    <EventTrigger RoutedEvent="Border.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>

                    <EventTrigger RoutedEvent="Border.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>

                <ContentControl Content="{Binding ActiveNode}" ContentTemplateSelector="{StaticResource SimpleCardSelector}" />
            </Border>
        </Popup>
        
        <ContentControl
            x:Name="_directEditHost"
            Content="{Binding}">

            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Setter Property="ContentTemplate" Value="{StaticResource EmptyDataTemplate}" />

                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Edit, Source={x:Static m:AppSettings.Default}}" Value="{x:Static m:EditMode.FloatPanel}" />

                                <Condition
                                    Binding="{Binding ActiveNode.Model.Price,Converter={StaticResource Equals2}, ConverterParameter={x:Static p:Question.InvalidPrice}}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <l:NumericTextBox
                                            BorderThickness="0"
                                            Visibility="Collapsed"
                                            Foreground="{Binding ActiveNode.Type.Model.Name, Converter={StaticResource QTypeToColorConverter}}"
                                            Width="40"
                                            Height="23"
                                            MaxLines="1"
                                            VerticalAlignment="Top"
                                            HorizontalAlignment="Left"
                                            VerticalContentAlignment="Center"
                                            Text="{Binding ActiveNode.Model.Price,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                            HorizontalContentAlignment="Center" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </Grid>
</UserControl>
